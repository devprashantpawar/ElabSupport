@model List<ElabSupport.Models.AccountSupportData>

@{
    ViewBag.Title = "Account";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <!-- Other meta tags and scripts -->
    <link href="~/CSS/AccountSummary.css" rel="stylesheet" />
</head>

<h2 class="account-summary">Account summary</h2>
<body>
    <div class="form-container col-xs-offset-5">
        @using (Html.BeginForm("FilterByDate", "ManageUser", FormMethod.Get))
        {
        <div class="form-content">
            <label for="fromDate">From Date:</label> &nbsp &nbsp
            <input type="date" id="fromDate" name="fromDate" value="@ViewData["fromDate"]" class="date-input" /> &nbsp &nbsp

            <label for="toDate">To Date:</label> &nbsp &nbsp
            <input type="date" id="toDate" name="toDate" value="@ViewData["toDate"]" class="date-input" /> &nbsp &nbsp

            <input type="submit" value="Search" class="btn btn-primary submit-btn" /> &nbsp &nbsp
            <button class="btn btn-primary print-btn" onclick="printTables()">Print</button> &nbsp &nbsp

            @* Add hidden fields for fromDate and toDate *@
            @Html.Hidden("fromDate", ViewData["fromDate"])
            @Html.Hidden("toDate", ViewData["toDate"])
        </div>
        }
    </div>
</body>
<!-- Print button -->

@section scripts {
    <script>
        function printTables() {
            var printWindow = window.open('', '_blank');
            var summaryTableContent = document.querySelector('.summary-table').outerHTML;
            var detailsTableContent = document.querySelector('.details-table').outerHTML;

            printWindow.document.open();
            printWindow.document.write('<html><head><title>Print</title></head><body>');
            printWindow.document.write('<h2>Account summary</h2>');
            printWindow.document.write(summaryTableContent);
            printWindow.document.write('<h3>Account Details</h3>');
            printWindow.document.write(detailsTableContent);
            printWindow.document.write('</body></html>');
            printWindow.document.close();
            printWindow.print();
        }
    </script>
}
<br />

<table class="table summary-table">
    <thead>
        <tr>
            <th>Account Type</th>
            <th>Total Days</th>
            <th>Total Amount</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>Account</th>
            <td>@Model.Sum(u => Convert.ToDouble(u.Days))</td>
            <td>@Model.Sum(u => Convert.ToDouble(u.TotalAmount))</td>
        </tr>
        <tr>
            <th>Lead</th>
            <td>@Model.Where(u => u.UserRole?.ToLower() == "lead").Sum(u => Convert.ToDouble(u.Days))</td>
            <td>@Model.Where(u => u.UserRole?.ToLower() == "lead").Sum(u => Convert.ToDouble(u.TotalAmount))</td>

        </tr>
        <tr>
            <th>Senior Support</th>
            <td>@Model.Where(u => u.UserRole?.ToLower() == "senior support").Sum(u => Convert.ToDouble(u.Days))</td>
            <td>@Model.Where(u => u.UserRole?.ToLower() == "senior support").Sum(u => Convert.ToDouble(u.TotalAmount))</td>
        </tr>
        <tr>
            <th>Junior Support</th>
            <td>@Model.Where(u => u.UserRole?.ToLower() == "junior support").Sum(u => Convert.ToDouble(u.Days))</td>
            <td>@Model.Where(u => u.UserRole?.ToLower() == "junior support").Sum(u => Convert.ToDouble(u.TotalAmount))</td>
        </tr>
    </tbody>
</table>

<h3 class="account-Details">Account Details</h3>
<table class="table details-table" id="accountDetailsTable">
    <thead>
        <tr>
            <th>OOSPerson</th>
            <th>UserRole</th>
            <th>Days Work</th>
            <th>TotalAmount</th>
            <th>Action</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var role in Model)
        {
            <tr>
                <td>@role.OOSPerson</td>
                <td>@role.UserRole</td>
                <td>@role.Days</td>
                <td>@role.TotalAmount</td>
                <td>
                    @Html.ActionLink("View", "ViewUserAccount", new { id = role.OOSPerson }, new { @class = "btn btn-primary btn-sm" })
                </td>
            </tr>
        }
    </tbody>
</table>
