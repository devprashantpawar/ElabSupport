@model ElabSupport.Models.UserViewModel
@{
    ViewBag.Title = "Add User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<ul class="nav nav-tabs" id="userTabs">
    <li class="nav-item">
        <a class="nav-link" id="viewUserTab" data-bs-toggle="tab" href="#viewUserContent">View User</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="addUserTab" data-bs-toggle="tab" href="#addUserContent">Add User</a>
    </li>
</ul>
<div class="tab-content">
    <div class="tab-pane fade" id="viewUserContent">
        @Html.Partial("_ViewUser")
    </div>

    <div class="tab-pane fade" id="addUserContent">
       
        <h2>Add User</h2>
        @using (Html.BeginForm("AddUser", "ManageUser", FormMethod.Post, new { @class = "form" }))
        {
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.user.Username)
                        @Html.TextBoxFor(model => model.user.Username, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.user.Username)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.Password)
                        @Html.PasswordFor(model => model.user.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.user.Password)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.user.FirstName)
                        @Html.PasswordFor(model => model.user.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.user.FirstName)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.EmailId)
                        @Html.TextBoxFor(model => model.user.EmailId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.user.EmailId)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.MobileNumber)
                        @Html.TextBoxFor(model => model.user.MobileNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.user.MobileNumber)
                    </div>

                </div>

                <!-- ... other form fields ... -->

                <div class="col-md-6">
                    <!-- ... other form fields ... -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.user.Address)
                        @Html.TextBoxFor(model => model.user.Address, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.user.DeviceId)
                        @Html.TextBoxFor(model => model.user.DeviceId, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.user.Rates)
                        @Html.TextBoxFor(model => model.user.Rates, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.user.Rates)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.RateType)
                        @Html.DropDownListFor(model => model.user.RateType,
                            new SelectList(new[]
                            {
                                new { Value = "1", Text = "UserRole" },
                                new { Value = "2", Text = "User" },
                            }, "Value", "Text"),
                            "Select an option",
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.user.RateType)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.UserRoleId)
                        @Html.DropDownListFor(model => model.user.UserRoleId,
                            new SelectList(new[]
                            {
                                new { Value = "1", Text = "Option 1" },
                                new { Value = "2", Text = "Option 2" },
                                new { Value = "3", Text = "Option 3" }
                            }, "Value", "Text"),
                            "Select an option",
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.user.UserRoleId)
                    </div>

                    <!-- Add other form fields as needed -->
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Add User</button>
            <button type="button" class="btn btn-secondary" onclick="clearForm()">Clear</button>

        }

    </div>
</div>
<script>
    $(document).ready(function () {
        // Initialize Bootstrap Tabs
        $('#userTabs a').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        // Trigger click event on the "View User" tab on page load
        $('#viewUserTab').click();

        // Optional: If you want to scroll to the bottom when the "View User" tab is selected, uncomment the following line
        // scrollToBottom();
    });

    function clearForm(tab) {
        // Clear individual form fields based on the active tab
        if (tab === 'addUser') {
            $("#Username").val("");
            $("#Password").val("");
            $("#EmailId").val("");
            $("#MobileNumber").val("");
            $("#Address").val("");
            $("#DeviceId").val("");
            // Add similar lines for other form fields

            $("#RateType").val("1");
            $("#UserRoleId").val("1");
        } else if (tab === 'viewUser') {
            // Clear view user form fields if needed
        }
    }

    function scrollToBottom() {
        // Scroll to the bottom of the page
        $('html, body').animate({ scrollTop: $(document).height() }, 'slow');
    }

    // Call scrollToBottom after adding a user
    // Example: Add this line after your AJAX success callback or form submission
    // scrollToBottom();
</script>
